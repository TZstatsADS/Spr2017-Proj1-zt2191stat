freq_inaug
View(freq_inaug)
wordcloud(tdm.overall$word, tdm.overall$`sum(n)`,
scale=c(8,0.3),
max.words=20,
min.freq=10,
random.order=FALSE,
rot.per=0.3,
use.r.layout=T,
random.color=FALSE,
colors=brewer.pal(9,"Blues"))
speech_tidy <- tidy(speech.corpus)
speech_tidy$author <- inaug.list$Ã¯..President
speech_token <- speech_tidy %>%
unnest_tokens(word, text) %>%
anti_join(stop_words, by = "word")
speech_token %>%
count(word, sort = TRUE)
View(plot_inaug)
View(inaug.list)
names(inaug.list)
View(inaug.list)
speech_tidy <- tidy(speech.corpus)
speech_tidy$author <- inaug.list$File
speech_token <- speech_tidy %>%
unnest_tokens(word, text) %>%
anti_join(stop_words, by = "word")
speech_token %>%
count(word, sort = TRUE)
freq_inaug <- speech_token %>%
group_by(author) %>%
count(word, sort = TRUE)%>%
left_join(speech_token %>%
group_by(author) %>%
summarise(total = n())) %>%
mutate(freq = n/total)
freq_inaug
View(inaug_tf_idf)
inaug_tf_idf <- freq_inaug %>%
bind_tf_idf(word, author, count) %>%
arrange(desc(tf_idf))
inaug_tf_idf <- speech_token %>%
bind_tf_idf(word, author, count) %>%
arrange(desc(tf_idf))
View(speech_token)
View(tdm.overall)
wordcloud(freq_inaug$word[freq_inaug$author == "GeorgeWashington"], tdm.overall$n,
scale=c(8,0.3),
max.words=20,
min.freq=10,
random.order=FALSE,
rot.per=0.3,
use.r.layout=T,
random.color=FALSE,
colors=brewer.pal(9,"Blues"))
View(tdm.overall)
wordcloud(freq_inaug$word[freq_inaug$author == "GeorgeWashington"], freq_inaug$n,
scale=c(8,0.3),
max.words=20,
min.freq=10,
random.order=FALSE,
rot.per=0.3,
use.r.layout=T,
random.color=FALSE,
colors=brewer.pal(9,"Blues"))
wordcloud(freq_inaug$word[freq_inaug$author == "GeorgeWashington"], freq_inaug$n,
scale=c(8,0.3),
max.words=20,
min.freq=10,
random.order=FALSE,
rot.per=0.3,
use.r.layout=T,
random.color=FALSE,
colors=brewer.pal(9,"Blues"))
wordcloud(freq_inaug$word[freq_inaug$author == "GeorgeWashington"], freq_inaug$n,
scale=c(8,0.3),
max.words=20,
min.freq=10,
random.order=FALSE,
rot.per=0.3,
use.r.layout=T,
random.color=FALSE,
colors=brewer.pal(9,"Blues"))
wordcloud(freq_inaug$word[freq_inaug$author == "GeorgeWashington"], freq_inaug$n,
scale=c(8,0.3),
max.words=10,
min.freq=10,
random.order=FALSE,
rot.per=0.3,
use.r.layout=T,
random.color=FALSE,
colors=brewer.pal(9,"Blues"))
wordcloud(freq_inaug$word[freq_inaug$author == "GeorgeWashington"], freq_inaug$n,
scale=c(5,0.3),
max.words=15,
min.freq=10,
random.order=FALSE,
rot.per=0.3,
use.r.layout=T,
random.color=FALSE,
colors=brewer.pal(9,"Blues"))
wordcloud(freq_inaug$word[freq_inaug$author == "GeorgeWashington"], freq_inaug$n,
scale=c(5,0.3),
max.words=15,
min.freq=10,
random.order=FALSE,
rot.per=0.3,
use.r.layout=T,
random.color=FALSE,
colors=brewer.pal(9,"Blues"))
wordcloud(freq_inaug$word[freq_inaug$author == "GeorgeWashington"], freq_inaug$n,
scale=c(5,0.3),
max.words=15,
min.freq=10,
random.order=FALSE,
rot.per=0.3,
use.r.layout=T,
random.color=FALSE,
colors=brewer.pal(9,"Blues"))
wordcloud(freq_inaug$word[freq_inaug$author == "GeorgeWashington"], freq_inaug$n,
scale=c(5,0.3),
max.words=15,
min.freq=10,
random.order=FALSE,
rot.per=0.3,
use.r.layout=T,
random.color=FALSE,
colors=brewer.pal(9,"Blues"))
wordcloud(freq_inaug$word[freq_inaug$author == "GeorgeWashington"], freq_inaug$n,
scale=c(5,0.3),
max.words=15,
min.freq=10,
random.order=FALSE,
rot.per=0.3,
use.r.layout=T,
random.color=FALSE,
colors=brewer.pal(9,"red"))
wordcloud(freq_inaug$word[freq_inaug$author == "GeorgeWashington"], freq_inaug$n,
scale=c(5,0.3),
max.words=15,
min.freq=10,
random.order=FALSE,
rot.per=0.3,
use.r.layout=T,
random.color=FALSE,
colors=brewer.pal(9,"blue"))
wordcloud(freq_inaug$word[freq_inaug$author == "GeorgeWashington"], freq_inaug$n,
scale=c(5,0.3),
max.words=15,
min.freq=10,
random.order=FALSE,
rot.per=0.3,
use.r.layout=T,
random.color=FALSE,
colors=brewer.pal(9,"Red"))
wordcloud(freq_inaug$word[freq_inaug$author == "GeorgeWashington"], freq_inaug$n,
scale=c(5,0.3),
max.words=15,
min.freq=10,
random.order=FALSE,
rot.per=0.3,
use.r.layout=T,
random.color=FALSE,
colors=brewer.pal(9,"Blue"))
wordcloud(freq_inaug$word[freq_inaug$author == "GeorgeWashington"], freq_inaug$n,
scale=c(5,0.3),
max.words=15,
min.freq=10,
random.order=FALSE,
rot.per=0.3,
use.r.layout=T,
random.color=FALSE,
colors=brewer.pal(9,"Reds"))
wordcloud(freq_inaug$word[freq_inaug$author == "GeorgeWashington"], freq_inaug$n,
scale=c(5,0.3),
max.words=15,
min.freq=10,
random.order=FALSE,
rot.per=0.3,
use.r.layout=T,
random.color=FALSE,
colors=brewer.pal(9,"Yellows"))
wordcloud(freq_inaug$word[freq_inaug$author == "GeorgeWashington"], freq_inaug$n,
scale=c(5,0.3),
max.words=15,
min.freq=10,
random.order=FALSE,
rot.per=0.3,
use.r.layout=T,
random.color=FALSE,
colors=brewer.pal(9,"Blues"))
wordcloud(freq_inaug$word[freq_inaug$author == "GeorgeWashington"], freq_inaug$n,
scale=c(5,0.3),
max.words=15,
min.freq=10,
random.order=FALSE,
rot.per=0.3,
use.r.layout=T,
random.color=FALSE,
colors=brewer.pal(9,"Blues"))
wordcloud(freq_inaug$word[freq_inaug$author == "GeorgeWashington"], freq_inaug$n,
scale=c(5,0.3),
max.words=15,
min.freq=10,
random.order=FALSE,
rot.per=0.3,
use.r.layout=T,
random.color=FALSE,
colors=brewer.pal(9,"Blues"))
wordcloud(freq_inaug$word[freq_inaug$author == "GeorgeWashington"], freq_inaug$n,
scale=c(5,0.3),
max.words=15,
min.freq=10,
random.order=FALSE,
rot.per=0.3,
use.r.layout=T,
random.color=FALSE,
colors=brewer.pal(9,"Blues"))
unique(freq_inaug$author)
wordcloud(freq_inaug$word[freq_inaug$author == "GeorgeWashington"], freq_inaug$n,
scale=c(5,0.3),
max.words=15,
min.freq=10,
random.order=FALSE,
rot.per=0.3,
use.r.layout=T,
random.color=FALSE,
colors=brewer.pal(9,"Blues"))
wordcloud(freq_inaug$word[freq_inaug$author == "GeorgeWBush"], freq_inaug$n,
scale=c(5,0.3),
max.words=15,
min.freq=10,
random.order=FALSE,
rot.per=0.3,
use.r.layout=T,
random.color=FALSE,
colors=brewer.pal(9,"Blues"))
freq_inaug <- speech_token %>%
group_by(author) %>%
count(word, sort = TRUE)%>%
left_join(speech_token %>%
group_by(author) %>%
summarise(total = n())) %>%
mutate(freq = n/total)
freq_inaug
wordcloud(freq_inaug$word[freq_inaug$author == "DonaldJTrump"], freq_inaug$n,
scale=c(5,0.3),
max.words=15,
min.freq=10,
random.order=FALSE,
rot.per=0.3,
use.r.layout=T,
random.color=FALSE,
colors=brewer.pal(9,"Blues"))
wordcloud(freq_inaug$word[freq_inaug$author == "DonaldJTrump"], freq_inaug$n,
scale=c(5,0.3),
max.words=20,
min.freq=20,
random.order=FALSE,
rot.per=0.3,
use.r.layout=T,
random.color=FALSE,
colors=brewer.pal(9,"Blues"))
wordcloud(freq_inaug$word[freq_inaug$author == "GeorgeWashington"], freq_inaug$n,
scale=c(5,0.3),
max.words=20,
min.freq=10,
random.order=FALSE,
rot.per=0.3,
use.r.layout=T,
random.color=FALSE,
colors=brewer.pal(9,"Blues"))
wordcloud(freq_inaug$word[freq_inaug$author == "GeorgeWashington"], freq_inaug$n,
scale=c(5,0.3),
max.words=30,
min.freq=10,
random.order=FALSE,
rot.per=0.3,
use.r.layout=T,
random.color=FALSE,
colors=brewer.pal(9,"Blues"))
wordcloud(freq_inaug$word[freq_inaug$author == "GeorgeWashington"], freq_inaug$n,
scale=c(5,0.3),
max.words=30,
min.freq=10,
random.order=FALSE,
rot.per=0.3,
use.r.layout=T,
random.color=FALSE,
colors=brewer.pal(9,"Blues"))
wordcloud(freq_inaug$word[freq_inaug$author == "GeorgeWashington"], freq_inaug$n,
scale=c(5,0.3),
max.words=30,
min.freq=10,
random.order=FALSE,
rot.per=0.3,
use.r.layout=T,
random.color=FALSE,
colors=brewer.pal(9,"Blues"))
wordcloud(freq_inaug$word[freq_inaug$author == "GeorgeWashington"], freq_inaug$n,
scale=c(5,0.3),
max.words=30,
min.freq=10,
random.order=FALSE,
rot.per=0.3,
use.r.layout=T,
random.color=FALSE,
colors=brewer.pal(9,"Blues"))
wordcloud(freq_inaug$word[freq_inaug$author == "GeorgeWashington"], freq_inaug$n,
scale=c(5,0.3),
max.words=30,
min.freq=10,
random.order=FALSE,
rot.per=0.3,
use.r.layout=T,
random.color=FALSE,
colors=brewer.pal(9,"Blues"))
wordcloud(freq_inaug$word[freq_inaug$author == "DonaldJTrump"], freq_inaug$n,
scale=c(5,0.3),
max.words=30,
min.freq=10,
random.order=FALSE,
rot.per=0.3,
use.r.layout=T,
random.color=FALSE,
colors=brewer.pal(9,"Blues"))
wordcloud(freq_inaug$word[freq_inaug$author == "GeorgeWashington"], freq_inaug$n,
scale=c(6,0.3),
max.words=30,
min.freq=10,
random.order=FALSE,
rot.per=0.3,
use.r.layout=T,
random.color=FALSE,
colors=brewer.pal(9,"Blues"))
wordcloud(freq_inaug$word[freq_inaug$author == "GeorgeWashington"], freq_inaug$n,
scale=c(4,0.3),
max.words=30,
min.freq=10,
random.order=FALSE,
rot.per=0.3,
use.r.layout=T,
random.color=FALSE,
colors=brewer.pal(9,"Blues"))
wordcloud(freq_inaug$word[freq_inaug$author == "GeorgeWashington"], freq_inaug$n,
scale=c(4.5,0.3),
max.words=30,
min.freq=10,
random.order=FALSE,
rot.per=0.3,
use.r.layout=T,
random.color=FALSE,
colors=brewer.pal(9,"Blues"))
wordcloud(freq_inaug$word[freq_inaug$author == "DonaldJTrump"], freq_inaug$n,
scale=c(4.5,0.3),
max.words=30,
min.freq=10,
random.order=FALSE,
rot.per=0.3,
use.r.layout=T,
random.color=FALSE,
colors=brewer.pal(9,"Blues"))
wordcloud(freq_inaug$word[freq_inaug$author == "AbrahamLincoln"], freq_inaug$n,
scale=c(4.5,0.3),
max.words=30,
min.freq=10,
random.order=FALSE,
rot.per=0.3,
use.r.layout=T,
random.color=FALSE,
colors=brewer.pal(9,"Blues"))
wordcloud(freq_inaug$word[freq_inaug$author == "JohnFKennedy"], freq_inaug$n,
scale=c(4.5,0.3),
max.words=30,
min.freq=10,
random.order=FALSE,
rot.per=0.3,
use.r.layout=T,
random.color=FALSE,
colors=brewer.pal(9,"Blues"))
wordcloud(freq_inaug$word[freq_inaug$author == "JohnFKennedy"], freq_inaug$n,
scale=c(4.5,0.3),
max.words=30,
min.freq=10,
random.order=FALSE,
rot.per=0.3,
use.r.layout=T,
random.color=FALSE,
colors=brewer.pal(9,"Blues"))
wordcloud(freq_inaug$word[freq_inaug$author == "JohnFKennedy"], freq_inaug$n,
scale=c(4.5,0.3),
max.words=30,
min.freq=10,
random.order=FALSE,
rot.per=0.3,
use.r.layout=T,
random.color=FALSE,
colors=brewer.pal(9,"Blues"))
packages.used=c("rvest", "tibble", "qdap",
"sentimentr", "gplots", "dplyr",
"tm", "syuzhet", "factoextra",
"beeswarm", "scales", "RColorBrewer",
"RANN", "tidytext", "topicmodels","wordcloud")
# check packages that need to be installed.
packages.needed=setdiff(packages.used,
intersect(installed.packages()[,1],
packages.used))
# install additional packages
if(length(packages.needed)>0){
install.packages(packages.needed, dependencies = TRUE)
}
# load packages
library("rvest")
library("tibble")
library("qdap")
library("sentimentr")
library("gplots")
library("dplyr")
library("tm")
library("syuzhet")
library("factoextra")
library("beeswarm")
library("scales")
library("RColorBrewer")
library("RANN")
library("tidytext")
library("topicmodels")
library("wordcloud")
source("../lib/plotstacked.R")
source("../lib/speechFuncs.R")
### Inauguaral speeches
main.page <- read_html(x = "http://www.presidency.ucsb.edu/inaugurals.php")
# Get link URLs
# f.speechlinks is a function for extracting links from the list of speeches.
inaug=f.speechlinks(main.page)
#head(inaug)
as.Date(inaug[,1], format="%B %e, %Y")
inaug=inaug[-nrow(inaug),] # remove the last line, irrelevant due to error.
inaug.list=read.csv("../data/inauglist.csv", stringsAsFactors = FALSE)
speech.list=inaug.list
speech.list$type=rep("inaug", nrow(inaug.list))
speech.url=inaug
speech.list=cbind(speech.list, speech.url)
# Loop over each row in speech.list
speech.list$fulltext=NA
for(i in seq(nrow(speech.list))) {
text <- read_html(speech.list$urls[i]) %>% # load the page
html_nodes(".displaytext") %>% # isloate the text
html_text() # get the text
speech.list$fulltext[i]=text
# Create the file name
filename <- paste0("../data/fulltext/",
speech.list$type[i],
speech.list$File[i], "-",
speech.list$Term[i], ".txt")
sink(file = filename) %>% # open file to write
cat(text)  # write the file
sink() # close the file
}
speech.corpus <- Corpus(VectorSource(speech.list$fulltext))
speech.corpus <- tm_map(speech.corpus, stripWhitespace)
speech.corpus <- tm_map(speech.corpus, content_transformer(tolower))
speech.corpus <- tm_map(speech.corpus, removeWords, stopwords("english"))
speech.corpus <- tm_map(speech.corpus, removeWords, character(0))
speech.corpus <- tm_map(speech.corpus, removePunctuation)
tdm.all <- TermDocumentMatrix(speech.corpus)
tdm.tidy <- tidy(tdm.all)
tdm.overall <- summarise(group_by(tdm.tidy, term),sum(count))
wordcloud(tdm.overall$term, tdm.overall$`sum(count)`,
scale=c(8,0.3),
max.words=20,
min.freq=10,
random.order=FALSE,
rot.per=0.3,
use.r.layout=T,
random.color=FALSE,
colors=brewer.pal(9,"Blues"))
speech_tidy <- tidy(speech.corpus)
speech_tidy$author <- inaug.list$File
speech_token <- speech_tidy %>%
unnest_tokens(word, text) %>%
anti_join(stop_words, by = "word")
speech_token %>%
count(word, sort = TRUE)
freq_inaug <- speech_token %>%
group_by(author) %>%
count(word, sort = TRUE)%>%
left_join(speech_token %>%
group_by(author) %>%
summarise(total = n())) %>%
mutate(freq = n/total)
freq_inaug
wordcloud(freq_inaug$word[freq_inaug$author == "GeorgeWashington"], freq_inaug$n,
scale=c(4.5,0.3),
max.words=30,
min.freq=10,
random.order=FALSE,
rot.per=0.3,
use.r.layout=T,
random.color=FALSE,
colors=brewer.pal(9,"Blues"))
wordcloud(freq_inaug$word[freq_inaug$author == "DonaldJTrump"], freq_inaug$n,
scale=c(4.5,0.3),
max.words=30,
min.freq=10,
random.order=FALSE,
rot.per=0.3,
use.r.layout=T,
random.color=FALSE,
colors=brewer.pal(9,"Blues"))
unlink('project1_cache', recursive = TRUE)
knit_with_parameters('~/GitHub/Spr2017-Proj1-zt2191stat/doc/project1.Rmd')
